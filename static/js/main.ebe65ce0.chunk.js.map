{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","index","SearchBox","searchChange","onChange","type","placeholder","Scroll","props","style","overflow","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAaeA,EAXF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GAC3B,OACE,sBAAKC,UAAU,kDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,gBACpB,gCACC,6BAAKF,IACL,4BAAIC,WCWIK,EAhBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEjB,OACE,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACf,OAAQ,cAAC,EAAD,CAENR,GAAIK,EAAOG,GAAOR,GAClBF,KAAMO,EAAOG,GAAOV,KACpBC,MAAOM,EAAOG,GAAOT,OAHhBS,SCEFC,EATG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAClB,OACE,8BACC,uBAAOC,SAAUD,EAAcT,UAAU,mCAAmCW,KAAK,SAASC,YAAY,qBCU5FC,EAVA,SAACC,GACd,OACE,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACCJ,EAAMK,YCgBIC,E,kDAtBb,WAAYN,GAAO,IAAD,8BAChB,cAAMA,IACDO,MAAQ,CACXC,UAAU,GAHI,E,8DAQFC,EAAMC,GACtBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAMrB,OAAGG,KAAKJ,MAAMC,SACL,0DAEFG,KAAKX,MAAMK,a,GAnBGQ,aCuDZC,G,wDAhDf,aAAc,IAAD,8BACX,gBAgBDC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACK,YAAaD,EAAME,OAAOC,SAhBzC,EAAKZ,MAAQ,CACXjB,OAAQ,GACR2B,YAAa,IAJJ,E,gEAQQ,IAAD,OACjBG,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJ,EAAKX,SAAS,CAACtB,OAAQiC,S,+BASnB,IAAD,EACyBZ,KAAKJ,MAA5BjB,EADF,EACEA,OAAQ2B,EADV,EACUA,YACVO,EAAgBlC,EAAOmC,QAAO,SAACC,GACnC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASX,EAAYU,kBAGvD,OAAQrC,EAAOuC,OAGX,sBAAK3C,UAAU,KAAf,UACC,6CACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACA,cAAC,EAAD,CAAUzB,OAAQkC,WAPtB,6C,GA7BYX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ebe65ce0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ name, email, id }) => {\r\n  return (\r\n    <div className=\"bg-light-blue dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n     <img alt=\"robots\" src={`https://robohash.org/${id}?200x200/>`}/>\r\n      <div>\r\n       <h2>{name}</h2>\r\n       <p>{email}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card.js';\r\n\r\nconst CardList = ({robots}) => {\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        robots.map((user,index)=>{\r\n          return (<Card\r\n            key={index}\r\n            id={robots[index].id}\r\n            name={robots[index].name}\r\n            email={robots[index].email}/>)\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\nexport default CardList;\r\n","import React from 'react';\r\n\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n  return(\r\n    <div>\r\n     <input onChange={searchChange} className=\"pa3 ba b--green bg-lightest-blue\" type=\"search\" placeholder=\"search robots\" />\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\n// props\r\n// state\r\n// children\r\n\r\nconst Scroll = (props) => {\r\n  return (\r\n    <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n    {props.children}\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\nexport default Scroll;\r\n","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      hasError: false\r\n    }\r\n  }\r\n\r\n\r\ncomponentDidCatch(error,info) {\r\n  this.setState({hasError: true})\r\n}\r\n\r\n\r\n  render(){\r\n\r\n      if(this.state.hasError){\r\n        return <h1>Opsss. That is not good.</h1>\r\n      }\r\n      return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundry;\r\n","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\nconstructor(){\r\n  super();\r\n  this.state = {\r\n    robots: [],\r\n    searchfield: ''\r\n  }\r\n}\r\n\r\n componentDidMount(){\r\n   fetch('https://jsonplaceholder.typicode.com/users')\r\n     .then(response => response.json())\r\n     .then(json => {\r\n       this.setState({robots: json})\r\n     })\r\n\r\n}\r\n\r\n onSearchChange = (event) => {\r\n  this.setState({searchfield: event.target.value});\r\n }\r\n\r\n  render(){\r\n    const { robots, searchfield} = this.state;\r\n    const filteredRobots= robots.filter((robot)=> {\r\n      return robot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n    })\r\n\r\n    return !robots.length ?\r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className=\"tc\">\r\n         <h1>RoboFriends</h1>\r\n         <SearchBox searchChange={this.onSearchChange}/>\r\n         <Scroll>\r\n          <ErrorBoundry>\r\n          <CardList robots={filteredRobots}/>\r\n          </ErrorBoundry>\r\n         </Scroll>\r\n        </div>\r\n      )\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>\n   <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}